version: 2.1

#############
# Executors
#############
executors:
  docker:
    docker:
      - image: cimg/base:2020.01
  linux:
    machine:
      image: ubuntu-1604:202004-01
  macos:
    macos:
      xcode: 11.4
  db-test:
    docker:
      - image: cimg/base:2020.01
      - image: circleci/postgres:9.6
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: circle_test
          POSTGRES_HOST_AUTH_METHOD: trust
  runner-test1:
    machine: true
    resource_class: mvxt/ubuntu-arm
  runner-test2:
    machine: true
    resource_class: mvxt/centos-runner

#############
# Orbs
#############
orbs:
  win: circleci/windows@2.4.0

  mvxt-test:
    jobs:
      test-env-interp:
        description: "Testing whether it's possible to interpolate params into env vars"
        docker:
          - image: bash:4.4.19
        environment:
          TEST_VAR_ONE: << parameters.test-var-one >>
        parameters:
          test-var-one:
            description: "Test var one"
            type: string
          test-var-two:
            description: "Test var two"
            type: string
        steps:
          - checkout
          - run:
              command: |
                echo "Echoing parameter interpolated as part of ENV config: $TEST_VAR_ONE"
          - run:
              command: |
                echo "Echoing parameter interpolated into actual run step: << parameters.test-var-two >>"
          - run: sh blah.sh

############
# Workflows
############
workflows:
  version: 2.1
  build-deploy:
    jobs:
      - mvxt-test/test-env-interp:
          test-var-one: "String1"
          test-var-two: "String2"
      - test:
          context: mvxt-prod
      - executor-param-test:
          name: test-node-job
          image: "circleci/node:10.15.1"
      - executor-param-test:
          name: test-go-job
          image: "circleci/golang:1.12.4"
      - cache-test
      - db-test
      - runner-centos1-test
      - runner-centos2-test
      - dlc-test
  matrix-test:
    jobs:
      - matrix-test:
          matrix:
            parameters:
              os: [docker, linux, macos, win/default]
              subject: ["World", "Friend", "Baby"]

##################
# Job Definitions
##################
jobs:
  test:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          command: echo $TEST_VAR
      - run:
          command: echo "test_var=$TEST_VAR"
      - run:
          command: |
            cat test.sh
            ./test.sh

  dlc-test:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    steps:
      - checkout
      - run: echo "Hello!" && sleep 10
      - run: sudo systemctl stop docker

  executor-param-test:
    parameters:
      image:
        description: "Docker image to use"
        type: string
    docker:
      - image: << parameters.image >>
    steps:
      - run: echo "Hello, world!"

  cache-test:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ .Branch }}
            - v1-dependencies-
      - run: ./test.sh
      - save_cache:
          key: v1-dependencies-{{ .Branch }}
          paths: ./*

  matrix-test:
    parameters:
      os:
        type: string
      subject:
        type: string
    executor: << parameters.os >>
    steps:
      - checkout
      - run: echo "Hello << parameters.subject >>!"

  db-test:
    executor: db-test
    steps:
      - run: sleep 10 && echo "Hello World!"

  runner-centos1-test:
    executor: runner-test1
    steps:
      - checkout
      - run: echo "Running on a Ubuntu ARM runner!"
  runner-centos2-test:
    executor: runner-test2
    steps:
      - checkout
      - run: echo "Running on a Ubuntu ARM runner!"
